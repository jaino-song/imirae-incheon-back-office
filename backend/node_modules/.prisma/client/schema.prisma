generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model bankAccountInfo {
  area     String  @id
  bankName String?
  accNum   String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model message {
  id         Int       @id @default(autoincrement()) @db.SmallInt
  title      String?   @default("") @db.VarChar
  text       String?   @db.VarChar
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  edited_at  DateTime? @db.Timestamptz(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String?  @db.VarChar
  name          String?  @db.VarChar
  profile_image String?  @db.VarChar
  role          String?  @db.VarChar
  created_at    DateTime @default(now()) @db.Timestamp(6)
  kakaoId       String   @unique @db.VarChar
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model voucherPriceInfo {
  id          Int     @id @db.SmallInt
  type        String?
  duration    BigInt?
  fullPrice   String?
  grant       String?
  actualPrice String?
}

model employee {
  id                      Int                 @id @db.SmallInt
  name                    String
  work_area               String
  phone                   String              @unique
  grade                   String
  open_to_next_work       Boolean             @default(true)
  company_registered_date DateTime?           @db.Date
  employee_schedule       employee_schedule[]
}

model employee_schedule {
  id                                                     Int      @id @default(autoincrement())
  employee_id                                            Int      @db.SmallInt
  work_address                                           String
  start_date                                             DateTime @db.Date
  end_date                                               DateTime @db.Date
  replaced                                               Boolean  @default(false)
  client_client_primary_employee_idToemployee_schedule   client[] @relation("client_primary_employee_idToemployee_schedule")
  client_client_secondary_employee_idToemployee_schedule client[] @relation("client_secondary_employee_idToemployee_schedule")
  employee                                               employee @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model client {
  id                                                                Int                @id @default(autoincrement())
  name                                                              String
  primary_employee_id                                               Int                @db.SmallInt
  secondary_employee_id                                             Int?               @db.SmallInt
  address                                                           String?
  phone                                                             String?
  type                                                              String?
  duration                                                          Int?               @db.SmallInt
  full_price                                                        String?
  grant                                                             String?
  actual_price                                                      String?
  start_date                                                        DateTime?          @db.Date
  end_date                                                          DateTime?          @db.Date
  care_center                                                       Boolean
  voucher_client                                                    Boolean
  employee_schedule_client_primary_employee_idToemployee_schedule   employee_schedule  @relation("client_primary_employee_idToemployee_schedule", fields: [primary_employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  employee_schedule_client_secondary_employee_idToemployee_schedule employee_schedule? @relation("client_secondary_employee_idToemployee_schedule", fields: [secondary_employee_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
